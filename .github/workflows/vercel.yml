name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types:
      - auto_merge_enabled
jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Install Node.js (this ensures Corepack is available)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # or the version your project requires

      # Enable Corepack and set the Yarn version to 4.5.0
      - name: Enable Corepack
        run: corepack enable

      - name: Set Yarn version
        run: corepack prepare yarn@4.5.0 --activate

      - name: Install Dependencies
        run: yarn install

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
