import type { Metadata, Viewport } from 'next';
import localFont from 'next/font/local';
import { QueryProvider, ThemeProvider, ClerkProvider, NProgressProvider } from '@/provider';

import './globals.css';

// Settings font
const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});

const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

const quickSandFont = localFont({
  src: [
    {
      path: './fonts/Quicksand-Light.ttf',
      weight: '300',
      style: 'normal',
    },
    {
      path: './fonts/Quicksand-Regular.ttf',
      weight: '400',
      style: 'normal',
    },
    {
      path: './fonts/Quicksand-Medium.ttf',
      weight: '500',
      style: 'normal',
    },
    {
      path: './fonts/Quicksand-SemiBold.ttf',
      weight: '600',
      style: 'normal',
    },
    {
      path: './fonts/Quicksand-Bold.ttf',
      weight: '700',
      style: 'normal',
    },
  ],
  variable: '--font-quicksand',
});

// Settings metadata
export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

// Settings viewport
export const viewport: Viewport = {
  width: 'device-width',
  height: 'device-height',
  initialScale: 1,
  minimumScale: 1,
  maximumScale: 1,
  userScalable: false,
  viewportFit: 'cover',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider>
      <QueryProvider>
        <html lang="en" suppressHydrationWarning>
          <body
            className={`${quickSandFont.className} ${geistMono.variable} ${geistSans.variable} antialiased`}
          >
            <ThemeProvider
              attribute="class"
              themes={['light', 'dark']}
              defaultTheme="light"
              disableTransitionOnChange
            >
              <NProgressProvider>{children}</NProgressProvider>
            </ThemeProvider>
          </body>
        </html>
      </QueryProvider>
    </ClerkProvider>
  );
}
